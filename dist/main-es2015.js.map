{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/events/create-event.component.html","webpack:///./src/app/events/event-detail/create-session.component.html","webpack:///./src/app/events/event-detail/event-detail.component.html","webpack:///./src/app/events/event-detail/session-list.component.html","webpack:///./src/app/nav/navbar.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/collapsible-well.component.ts","webpack:///./src/app/common/common-barrel.ts","webpack:///./src/app/common/jQuery.service.ts","webpack:///./src/app/common/modal-trigger.directive.ts","webpack:///./src/app/common/simple-modal.component.ts","webpack:///./src/app/common/toastr.service.ts","webpack:///./src/app/errors/404.component.ts","webpack:///./src/app/events/create-event.component.ts","webpack:///./src/app/events/event-barrel.ts","webpack:///./src/app/events/event-detail/create-session.component.ts","webpack:///./src/app/events/event-detail/event-detail-barrel.ts","webpack:///./src/app/events/event-detail/event-detail.component.ts","webpack:///./src/app/events/event-detail/session-list.component.ts","webpack:///./src/app/events/event-detail/upvote.component.css","webpack:///./src/app/events/event-detail/upvote.component.ts","webpack:///./src/app/events/event-detail/voter.service.ts","webpack:///./src/app/events/event-resolver.service.ts","webpack:///./src/app/events/event-thumbnail.component.ts","webpack:///./src/app/events/events-list-resolver.service.ts","webpack:///./src/app/events/events-list.component.ts","webpack:///./src/app/events/location-validator.directive.ts","webpack:///./src/app/events/shared/duration.pipe.ts","webpack:///./src/app/events/shared/event-shared-barrel.ts","webpack:///./src/app/events/shared/event.service.ts","webpack:///./src/app/events/shared/restricted-words-validator.ts","webpack:///./src/app/nav/navbar.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/user/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./user/user.module\": [\n\t\t\"./src/app/user/user.module.ts\",\n\t\t\"user-user-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<h1>New Event</h1>\\r\\n<hr />\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <form\\r\\n    #newEventForm=\\\"ngForm\\\"\\r\\n    (ngSubmit)=\\\"saveEvent(newEventForm.value)\\\"\\r\\n    autocomplete=\\\"off\\\"\\r\\n    novalidate\\r\\n  >\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{\\r\\n        error:\\r\\n          newEventForm.controls.name?.invalid &&\\r\\n          newEventForm.controls.name?.touched\\r\\n      }\\\"\\r\\n    >\\r\\n      <label for=\\\"eventName\\\">Event Name:</label>\\r\\n      <em\\r\\n        *ngIf=\\\"\\r\\n          newEventForm.controls.name?.invalid &&\\r\\n          newEventForm.controls.name?.touched\\r\\n        \\\"\\r\\n        >Required</em\\r\\n      >\\r\\n      <input\\r\\n        (ngModel)=\\\"(newEvent.name)\\\"\\r\\n        name=\\\"name\\\"\\r\\n        required\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"Name of your event...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{\\r\\n        error:\\r\\n          newEventForm.controls.date?.invalid &&\\r\\n          newEventForm.controls.date?.touched\\r\\n      }\\\"\\r\\n    >\\r\\n      <label for=\\\"eventDate\\\">Event Date:</label>\\r\\n      <em\\r\\n        *ngIf=\\\"\\r\\n          newEventForm.controls.date?.invalid &&\\r\\n          newEventForm.controls.date?.touched\\r\\n        \\\"\\r\\n        >Required</em\\r\\n      >\\r\\n      <input\\r\\n        (ngModel)=\\\"(newEvent.date)\\\"\\r\\n        name=\\\"date\\\"\\r\\n        required\\r\\n        id=\\\"eventDate\\\"\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"format (mm/dd/yyyy)...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{\\r\\n        error:\\r\\n          newEventForm.controls.time?.invalid &&\\r\\n          newEventForm.controls.time?.touched\\r\\n      }\\\"\\r\\n    >\\r\\n      <label for=\\\"eventTime\\\">Event Time:</label>\\r\\n      <em\\r\\n        *ngIf=\\\"\\r\\n          newEventForm.controls.time?.invalid &&\\r\\n          newEventForm.controls.time?.touched\\r\\n        \\\"\\r\\n        >Required</em\\r\\n      >\\r\\n      <input\\r\\n        (ngModel)=\\\"(newEvent.time)\\\"\\r\\n        name=\\\"time\\\"\\r\\n        required\\r\\n        id=\\\"eventTime\\\"\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"start and end time...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{\\r\\n        error:\\r\\n          newEventForm.controls.price?.invalid &&\\r\\n          newEventForm.controls.price?.touched\\r\\n      }\\\"\\r\\n    >\\r\\n      <label for=\\\"eventPrice\\\">Event Price:</label>\\r\\n      <em\\r\\n        *ngIf=\\\"\\r\\n          newEventForm.controls.price?.invalid &&\\r\\n          newEventForm.controls.price?.touched\\r\\n        \\\"\\r\\n        >Required</em\\r\\n      >\\r\\n      <input\\r\\n        (ngModel)=\\\"(newEvent.price)\\\"\\r\\n        name=\\\"price\\\"\\r\\n        required\\r\\n        id=\\\"eventPrice\\\"\\r\\n        type=\\\"text\\\"\\r\\n        type=\\\"number\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"event price...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div ngModelGroup=\\\"location\\\" #locationGroup=\\\"ngModelGroup\\\" validateLocation>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"address\\\">Event Location:</label>\\r\\n        <em *ngIf=\\\"locationGroup?.invalid && locationGroup?.touched\\\"\\r\\n          >You must enter the full location or an online URL</em\\r\\n        >\\r\\n        <input\\r\\n          (ngModel)=\\\"(newEvent.address)\\\"\\r\\n          name=\\\"address\\\"\\r\\n          id=\\\"address\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Address of event...\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <input\\r\\n            (ngModel)=\\\"(newEvent.city)\\\"\\r\\n            name=\\\"city\\\"\\r\\n            id=\\\"city\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"City...\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <input\\r\\n            (ngModel)=\\\"(newEvent.country)\\\"\\r\\n            name=\\\"country\\\"\\r\\n            id=\\\"country\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Country...\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"onlineUrl\\\">Online Url:</label>\\r\\n      <input\\r\\n        (ngModel)=\\\"(newEvent.onlineUrl)\\\"\\r\\n        name=\\\"onlineUrl\\\"\\r\\n        id=\\\"onlineUrl\\\"\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"Online Url...\\\"\\r\\n        (change)=\\\"\\r\\n          locationGroup.control.controls.address.updateValueAndValidity()\\r\\n        \\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{\\r\\n        error:\\r\\n          newEventForm.controls.imageUrl?.invalid &&\\r\\n          newEventForm.controls.imageUrl?.touched\\r\\n      }\\\"\\r\\n    >\\r\\n      <label for=\\\"imageUrl\\\">Image:</label>\\r\\n      <em\\r\\n        *ngIf=\\\"\\r\\n          newEventForm.controls.imageUrl?.invalid &&\\r\\n          newEventForm.controls.imageUrl?.touched &&\\r\\n          newEventForm.controls.imageUrl?.errors.required\\r\\n        \\\"\\r\\n        >Required</em\\r\\n      >\\r\\n      <em\\r\\n        *ngIf=\\\"\\r\\n          newEventForm.controls.imageUrl?.invalid &&\\r\\n          newEventForm.controls.imageUrl?.touched &&\\r\\n          newEventForm.controls.imageUrl?.errors.pattern\\r\\n        \\\"\\r\\n        >Must be a png or jpg url</em\\r\\n      >\\r\\n      <input\\r\\n        (ngModel)=\\\"(newEvent.imageUrl)\\\"\\r\\n        name=\\\"imageUrl\\\"\\r\\n        required\\r\\n        pattern=\\\".*\\\\/.*.(png|jpg)\\\"\\r\\n        id=\\\"imageUrl\\\"\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"url of image...\\\"\\r\\n      />\\r\\n      <img\\r\\n        [src]=\\\"newEventForm.controls.imageUrl.value\\\"\\r\\n        *ngIf=\\\"newEventForm.controls.imageUrl?.valid\\\"\\r\\n      />\\r\\n    </div>\\r\\n\\r\\n    <button\\r\\n      type=\\\"submit\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      [disabled]=\\\"newEventForm.invalid\\\"\\r\\n    >\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <h3>Create Session</h3>\\r\\n</div>\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <form\\r\\n    [formGroup]=\\\"newSessionForm\\\"\\r\\n    (ngSubmit)=\\\"saveSession(newSessionForm.value)\\\"\\r\\n    autocomplete=\\\"off\\\"\\r\\n  >\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ error: name.invalid && name.dirty }\\\">\\r\\n      <label for=\\\"sessionName\\\">Session Name:</label>\\r\\n      <em *ngIf=\\\"name.invalid && name.dirty\\\">Required</em>\\r\\n      <input\\r\\n        formControlName=\\\"name\\\"\\r\\n        id=\\\"sessionName\\\"\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"session name...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{ error: presenter.invalid && presenter.dirty }\\\"\\r\\n    >\\r\\n      <label for=\\\"eventDate\\\">Presenter:</label>\\r\\n      <em *ngIf=\\\"presenter.invalid && presenter.dirty\\\">Required</em>\\r\\n      <input\\r\\n        formControlName=\\\"presenter\\\"\\r\\n        id=\\\"presenter\\\"\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"presenter...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{ error: duration.invalid && duration.dirty }\\\"\\r\\n    >\\r\\n      <label for=\\\"duration\\\">Duration:</label>\\r\\n      <em *ngIf=\\\"duration.invalid && duration.dirty\\\">Required</em>\\r\\n      <select class=\\\"form-control\\\" formControlName=\\\"duration\\\">\\r\\n        <option value=\\\"\\\">select duration...</option>\\r\\n        <option value=\\\"1\\\">Half Hour</option>\\r\\n        <option value=\\\"2\\\">1 Hour</option>\\r\\n        <option value=\\\"3\\\">Half Day</option>\\r\\n        <option value=\\\"4\\\">Full Day</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ error: level.invalid && level.dirty }\\\">\\r\\n      <label for=\\\"level\\\">Level:</label>\\r\\n      <em *ngIf=\\\"level.invalid && level.dirty\\\">Required</em>\\r\\n      <select class=\\\"form-control\\\" formControlName=\\\"level\\\">\\r\\n        <option value=\\\"\\\">select level...</option>\\r\\n        <option value=\\\"Beginner\\\">Beginner</option>\\r\\n        <option value=\\\"Intermediate\\\">Intermediate</option>\\r\\n        <option value=\\\"Advanced\\\">Advanced</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"form-group\\\"\\r\\n      [ngClass]=\\\"{ error: abstract.invalid && abstract.dirty }\\\"\\r\\n    >\\r\\n      <label for=\\\"abstract\\\">Abstract:</label>\\r\\n      <em\\r\\n        *ngIf=\\\"abstract.invalid && abstract.dirty && abstract?.errors.required\\\"\\r\\n        >Required</em\\r\\n      >\\r\\n      <em\\r\\n        *ngIf=\\\"abstract.invalid && abstract.dirty && abstract?.errors.maxlength\\\"\\r\\n        >Cannot exceed 400 characters</em\\r\\n      >\\r\\n      <em\\r\\n        *ngIf=\\\"\\r\\n          abstract.invalid && abstract.dirty && abstract?.errors.restrictedWords\\r\\n        \\\"\\r\\n        >Restricted Words Found: {{ abstract.errors.restrictedWords }}</em\\r\\n      >\\r\\n      <textarea\\r\\n        formControlName=\\\"abstract\\\"\\r\\n        id=\\\"abstract\\\"\\r\\n        rows=\\\"3\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        placeholder=\\\"abstract...\\\"\\r\\n      ></textarea>\\r\\n    </div>\\r\\n    <button\\r\\n      type=\\\"submit\\\"\\r\\n      class=\\\"btn btn-primary\\\"\\r\\n      [disabled]=\\\"newSessionForm.invalid\\\"\\r\\n    >\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <img class=\\\"event-image\\\" [src]=\\\"event?.imageUrl\\\" [alt]=\\\"event?.name\\\" />\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-11\\\">\\n      <h2>{{ event?.name | uppercase }}</h2>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div><strong>Date:</strong> {{ event?.date | date: \\\"shortDate\\\" }}</div>\\n      <div><strong>Time:</strong> {{ event?.time }}</div>\\n      <div><strong>Price:</strong> {{ event?.price | currency: \\\"USD\\\" }}</div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <address>\\n        <strong>Address:</strong><br />\\n        {{ event?.location?.address }}<br />\\n        {{ event?.location?.city }}, {{ event?.location?.country }}\\n      </address>\\n    </div>\\n  </div>\\n\\n  <hr />\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <h3 style=\\\"margin:0\\\">Sessions</h3>\\n    </div>\\n    <div class=\\\"col-md-7\\\" style=\\\"margin-bottom: 10px\\\">\\n      <div class=\\\"btn-group btn-group-sm\\\" style=\\\"margin: 0 20px;\\\">\\n        <button\\n          class=\\\"btn btn-default\\\"\\n          [class.active]=\\\"sortBy === 'name'\\\"\\n          (click)=\\\"sortBy = 'name'\\\"\\n        >\\n          By Name\\n        </button>\\n\\n        <button\\n          class=\\\"btn btn-default\\\"\\n          [class.active]=\\\"sortBy === 'votes'\\\"\\n          (click)=\\\"sortBy = 'votes'\\\"\\n        >\\n          By Votes\\n        </button>\\n      </div>\\n\\n      <div class=\\\"btn-group btn-group-sm\\\">\\n        <button\\n          class=\\\"btn btn-default\\\"\\n          [class.active]=\\\"filterBy === 'all'\\\"\\n          (click)=\\\"(filterBy === 'all')\\\"\\n        >\\n          All\\n        </button>\\n        <button\\n          class=\\\"btn btn-default\\\"\\n          [class.active]=\\\"filterBy === 'beginner'\\\"\\n          (click)=\\\"filterBy = 'beginner'\\\"\\n        >\\n          Beginner\\n        </button>\\n        <button\\n          class=\\\"btn btn-default\\\"\\n          [class.active]=\\\"filterBy === 'intermediate'\\\"\\n          (click)=\\\"filterBy = 'intermediate'\\\"\\n        >\\n          Intermediate\\n        </button>\\n        <button\\n          class=\\\"btn btn-default\\\"\\n          [class.active]=\\\"filterBy === 'advanced'\\\"\\n          (click)=\\\"filterBy = 'advanced'\\\"\\n        >\\n          Advanced\\n        </button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-2\\\">\\n      <a (click)=\\\"addSession()\\\">Add Session</a>\\n    </div>\\n  </div>\\n  <session-list\\n    [eventId]=\\\"event?.id\\\"\\n    [sortBy]=\\\"sortBy\\\"\\n    [sessions]=\\\"event?.sessions\\\"\\n    *ngIf=\\\"!addMode\\\"\\n    [filterBy]=\\\"filterBy\\\"\\n  ></session-list>\\n  <create-session\\n    *ngIf=\\\"addMode\\\"\\n    (saveNewSession)=\\\"saveNewSession($event)\\\"\\n    (cancelAddSession)=\\\"cancelAddSession()\\\"\\n  ></create-session>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\" *ngFor=\\\"let session of visibleSessions\\\">\\r\\n  <div class=\\\"col-md-1\\\">\\r\\n    <div *ngIf=\\\"auth.isAuthenticated()\\\">\\r\\n      <upvote\\r\\n        (vote)=\\\"toggleVote(session)\\\"\\r\\n        [count]=\\\"session.voters.length\\\"\\r\\n        [voted]=\\\"userHasVoted(session)\\\"\\r\\n      ></upvote>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-10\\\">\\r\\n    <collapsible-well>\\r\\n      <div well-title>\\r\\n        {{ session.name }}\\r\\n        <i\\r\\n          *ngIf=\\\"session.voters.length > 3\\\"\\r\\n          class=\\\"glyphicon glyphicon-fire\\\"\\r\\n          style=\\\"color:red;\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n      <div well-body>\\r\\n        <h6>{{ session.presenter }}</h6>\\r\\n        <span>Duration: {{ session.duration | duration }}</span\\r\\n        ><br />\\r\\n        <span>Level: {{ session.level }}</span>\\r\\n        <p>{{ session.abstract }}</p>\\r\\n      </div>\\r\\n    </collapsible-well>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"navbar navbar-default\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <a class=\\\"navbar-brand\\\">ngEvents</a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li>\\r\\n          <a\\r\\n            [routerLink]=\\\"['/events']\\\"\\r\\n            routerLinkActive=\\\"active\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n            >All Events</a\\r\\n          >\\r\\n        </li>\\r\\n        <li>\\r\\n          <a [routerLink]=\\\"['/events/new']\\\" routerLinkActive=\\\"active\\\"\\r\\n            >Create Event</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"dropdown\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n            Events\\r\\n            <span class=\\\"caret\\\"></span>\\r\\n          </a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li>\\r\\n              <a href=\\\"\\\">Angular Connect</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div class=\\\"navbar-header navbar-right\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li>\\r\\n            <a [routerLink]=\\\"['user/login']\\\" *ngIf=\\\"!auth.isAuthenticated()\\\"\\r\\n              >Login</a\\r\\n            >\\r\\n            <a [routerLink]=\\\"['user/profile']\\\" *ngIf=\\\"auth.isAuthenticated()\\\"\\r\\n              >Welcome {{ auth.currentUser.firstName }}</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <form\\r\\n        id=\\\"searchForm\\\"\\r\\n        class=\\\"navbar-form navbar-right\\\"\\r\\n        (ngSubmit)=\\\"searchSessions(searchTerm)\\\"\\r\\n      >\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input\\r\\n            [(ngModel)]=\\\"searchTerm\\\"\\r\\n            name=\\\"searchTerm\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Search Sessions\\\"\\r\\n          />\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-default\\\" modal-trigger=\\\"searchResults\\\">\\r\\n          Search\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<simple-modal\\r\\n  elementId=\\\"searchResults\\\"\\r\\n  title=\\\"Matching Sessions\\\"\\r\\n  closeOnBodyClick=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"list-group\\\">\\r\\n    <a\\r\\n      class=\\\"list-group-item\\\"\\r\\n      *ngFor=\\\"let session of foundSessions\\\"\\r\\n      [routerLink]=\\\"['/events', session.eventId]\\\"\\r\\n      >{{ session.name }}</a\\r\\n    >\\r\\n  </div>\\r\\n</simple-modal>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './user/auth.service';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <nav-bar></nav-bar>\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent implements OnInit {\n  constructor(private auth: AuthService) {}\n\n  ngOnInit() {\n    this.auth.checkAuthenticationStatus();\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n// Component Imports\nimport { AppComponent } from \"./app.component\";\nimport { NavBarComponent } from \"./nav/navbar.component\";\nimport { Error404Component } from \"./errors/404.component\";\n\n// Service Imports\nimport { AuthService } from \"./user/auth.service\";\n\n// Route Imports\nimport { appRoutes } from \"./routes\";\n\n// Common Imports\nimport {\n  TOASTR_TOKEN,\n  Toastr,\n  CollapsibleWellComponent,\n  JQ_TOKEN,\n  SimpleModalComponent,\n  ModalTriggerDirective\n} from \"./common/common-barrel\";\n\n// Event Imports\nimport {\n  EventsListResolver,\n  EventResolver,\n  EventService,\n  VoterService,\n  EventsListComponent,\n  CreateEventComponent,\n  EventDetailComponent,\n  CreateSessionComponent,\n  EventThumbnailComponent,\n  SessionListComponent,\n  UpVoteComponent,\n  DurationPipe,\n  LocationValidator\n} from \"./events/event-barrel\";\n\n// Global 3rd Party Objects\nlet toastr: Toastr = window[\"toastr\"];\nlet jQuery = window[\"$\"];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventsListComponent,\n    EventThumbnailComponent,\n    NavBarComponent,\n    CollapsibleWellComponent,\n    EventDetailComponent,\n    CreateEventComponent,\n    CreateSessionComponent,\n    Error404Component,\n    SessionListComponent,\n    DurationPipe,\n    SimpleModalComponent,\n    ModalTriggerDirective,\n    UpVoteComponent,\n    LocationValidator\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [\n    EventService,\n    VoterService,\n    EventResolver,\n    EventsListResolver,\n    AuthService,\n    {\n      provide: TOASTR_TOKEN,\n      useValue: toastr\n    },\n    {\n      provide: JQ_TOKEN,\n      useValue: jQuery\n    },\n    { provide: \"canDeactivateCreateEvent\", useValue: checkDirtyState }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\nexport function checkDirtyState(component: CreateEventComponent) {\n  if (component.isDirty) {\n    return window.confirm(\n      \"You have not saved this event. Do you really want to cancel?\"\n    );\n  }\n  return true;\n}\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"collapsible-well\",\r\n  template: `\r\n    <div (click)=\"toggleContent()\" class=\"well pointable\">\r\n      <h4>\r\n        <ng-content select=\"[well-title]\"></ng-content>\r\n      </h4>\r\n      <ng-content *ngIf=\"visible\" select=\"[well-body]\"></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class CollapsibleWellComponent {\r\n  visible: boolean = true;\r\n\r\n  toggleContent() {\r\n    this.visible = !this.visible;\r\n  }\r\n}\r\n","export * from \"./toastr.service\";\r\nexport * from \"./jQuery.service\";\r\nexport * from \"./collapsible-well.component\";\r\nexport * from \"./simple-modal.component\";\r\nexport * from \"./modal-trigger.directive\";\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport let JQ_TOKEN = new InjectionToken<Object>(\"jquery\");\r\n","import { Directive, OnInit, Inject, ElementRef, Input } from \"@angular/core\";\r\nimport { JQ_TOKEN } from \"./jQuery.service\";\r\n\r\n@Directive({\r\n  selector: \"[modal-trigger]\"\r\n})\r\nexport class ModalTriggerDirective implements OnInit {\r\n  @Input(\"modal-trigger\") modalId: string;\r\n  private el: HTMLElement;\r\n  constructor(@Inject(JQ_TOKEN) private $: any, elementRef: ElementRef) {\r\n    this.el = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.el.addEventListener(\"click\", e => {\r\n      this.$(`#${this.modalId}`).modal({});\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, ViewChild, ElementRef, Inject } from \"@angular/core\";\r\nimport { JQ_TOKEN } from \"./jQuery.service\";\r\n\r\n@Component({\r\n  selector: \"simple-modal\",\r\n  template: `\r\n    <div id=\"{{ elementId }}\" #modalContainer class=\"modal fade\" tabindex=\"-1\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n              <span>&times;</span>\r\n            </button>\r\n            <h4 class=\"modal-title\">{{ title }}</h4>\r\n          </div>\r\n          <div class=\"modal-body\" (click)=\"closeModal()\">\r\n            <ng-content></ng-content>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .modal-body {\r\n        height: 250px;\r\n        overflow-y: scroll;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class SimpleModalComponent {\r\n  @Input() title: string;\r\n  @Input() elementId: string;\r\n  @Input() closeOnBodyClick: string;\r\n  @ViewChild(\"modalContainer\", null) containerEl: ElementRef;\r\n\r\n  constructor(@Inject(JQ_TOKEN) private $: any) {}\r\n\r\n  closeModal() {\r\n    if (this.closeOnBodyClick.toLocaleLowerCase() === \"true\") {\r\n      this.$(this.containerEl.nativeElement).modal(\"hide\");\r\n    }\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core'\r\n\r\n\r\nexport let TOASTR_TOKEN = new InjectionToken<Toastr>(`toastr`);\r\n\r\nexport interface Toastr {\r\n    success (msg: string, title?: string): void;\r\n    info(msg: string, title?: string): void;\r\n    warning(msg: string, title?: string): void;\r\n    error(msg: string, title?: string): void\r\n}","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  template: `\r\n    <h1 class=\"errorMessage\">404'd</h1>\r\n  `,\r\n  styles: [`\r\n    .errorMessage { \r\n      margin-top:150px; \r\n      font-size: 170px;\r\n      text-align: center; \r\n    }`]\r\n})\r\nexport class Error404Component{\r\n  constructor() {\r\n\r\n  }\r\n\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { EventService } from './shared/event.service';\r\n\r\n@Component({\r\n  templateUrl: `./create-event.component.html`,\r\n  styles: [\r\n    `\r\n      em {\r\n        float: right;\r\n        color: #e05c65;\r\n        padding-left: 10px;\r\n      }\r\n      .error input {\r\n        background-color: #e3c3c5;\r\n      }\r\n      .error ::-webkit-input-placeholder,\r\n      .error :ms-input-placeholder,\r\n      .error ::-moz-placeholder,\r\n      .error :-moz-placeholder {\r\n        color: #999;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class CreateEventComponent {\r\n  newEvent;\r\n  isDirty = true;\r\n  constructor(private router: Router, private eventService: EventService) {}\r\n\r\n  saveEvent(formValues) {\r\n    this.eventService.saveEvent(formValues).subscribe(() => {\r\n      this.isDirty = false;\r\n      this.router.navigate(['/events']);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/events']);\r\n  }\r\n}\r\n","export * from \"./create-event.component\";\r\nexport * from \"./event-thumbnail.component\";\r\nexport * from \"./events-list.component\";\r\nexport * from \"./events-list-resolver.service\";\r\nexport * from \"./shared/event-shared-barrel\";\r\nexport * from \"./event-detail/event-detail-barrel\";\r\nexport * from \"./location-validator.directive\";\r\nexport * from \"./event-resolver.service\";\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Validators, FormControl, FormGroup } from '@angular/forms';\r\nimport { ISession, restrictedWords } from '../shared/event-shared-barrel';\r\n\r\n@Component({\r\n  selector: 'create-session',\r\n  templateUrl: './create-session.component.html',\r\n  styles: [\r\n    `\r\n      em {\r\n        float: right;\r\n        color: #e05c65;\r\n        padding-left: 10px;\r\n      }\r\n      .error input,\r\n      .error select,\r\n      .error textarea {\r\n        background-color: #e3c3c5;\r\n      }\r\n      .error ::-webkit-input-placeholder,\r\n      .error :ms-input-placeholder,\r\n      .error ::-moz-placeholder,\r\n      .error :-moz-placeholder {\r\n        color: #999;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class CreateSessionComponent implements OnInit {\r\n  name: FormControl;\r\n  presenter: FormControl;\r\n  duration: FormControl;\r\n  level: FormControl;\r\n  abstract: FormControl;\r\n  newSessionForm: FormGroup;\r\n  @Output() saveNewSession = new EventEmitter();\r\n  @Output() cancelAddSession = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.name = new FormControl('', Validators.required);\r\n    this.presenter = new FormControl('', Validators.required);\r\n    this.duration = new FormControl('', Validators.required);\r\n    this.level = new FormControl('', Validators.required);\r\n    this.abstract = new FormControl('', [\r\n      Validators.required,\r\n      Validators.maxLength(400),\r\n      restrictedWords(['foo', 'bar'])\r\n    ]);\r\n\r\n    this.newSessionForm = new FormGroup({\r\n      name: this.name,\r\n      presenter: this.presenter,\r\n      duration: this.duration,\r\n      level: this.level,\r\n      abstract: this.abstract\r\n    });\r\n  }\r\n\r\n  saveSession(formValues) {\r\n    const session: ISession = {\r\n      id: undefined,\r\n      name: formValues.name,\r\n      presenter: formValues.presenter,\r\n      level: formValues.level,\r\n      abstract: formValues.abstract,\r\n      duration: +formValues.duration,\r\n      voters: []\r\n    };\r\n    this.saveNewSession.emit(session);\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelAddSession.emit();\r\n  }\r\n}\r\n","export * from './event-detail.component';\r\nexport * from './create-session.component';\r\nexport * from './session-list.component';\r\nexport * from './upvote.component';\r\nexport * from './voter.service';\r\n","import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../shared/event.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { IEvent, ISession } from '../shared/event-shared-barrel';\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styles: [\n    `\n      .container {\n        padding: 0 20px;\n      }\n      .event-image {\n        height: 100px;\n      }\n      a {\n        cursor: pointer;\n      }\n    `\n  ]\n})\nexport class EventDetailComponent implements OnInit {\n  event: IEvent;\n  addMode: boolean;\n  filterBy = 'all';\n  sortBy = 'votes';\n\n  constructor(\n    private eventService: EventService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.forEach(data => {\n      this.event = data.event;\n      this.addMode = false;\n    });\n  }\n\n  addSession() {\n    this.addMode = true;\n  }\n\n  saveNewSession(session: ISession) {\n    const nextId = Math.max.apply(null, this.event.sessions.map(s => s.id));\n    session.id = nextId + 1;\n    this.event.sessions.push(session);\n    this.eventService.saveEvent(this.event).subscribe();\n    this.addMode = false;\n  }\n\n  cancelAddSession() {\n    this.addMode = false;\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { ISession } from '../event-barrel';\r\nimport { AuthService } from 'src/app/user/auth.service';\r\nimport { VoterService } from './voter.service';\r\n\r\n@Component({\r\n  selector: 'session-list',\r\n  templateUrl: './session-list.component.html'\r\n})\r\nexport class SessionListComponent implements OnChanges {\r\n  @Input() sessions: ISession[];\r\n  @Input() filterBy: string;\r\n  @Input() sortBy: string;\r\n  @Input() eventId: number;\r\n  visibleSessions: ISession[] = [];\r\n\r\n  constructor(private voterService: VoterService, private auth: AuthService) {}\r\n\r\n  ngOnChanges() {\r\n    if (this.sessions) {\r\n      this.filterSessions(this.filterBy);\r\n      this.sortBy === 'name'\r\n        ? this.visibleSessions.sort(sortByNameAsc)\r\n        : this.visibleSessions.sort(sortByVotesDesc);\r\n    }\r\n  }\r\n\r\n  toggleVote(session: ISession) {\r\n    if (this.userHasVoted(session)) {\r\n      this.voterService.deleteVoter(\r\n        this.eventId,\r\n        session,\r\n        this.auth.currentUser.userName\r\n      );\r\n    } else {\r\n      this.voterService.addVoter(\r\n        this.eventId,\r\n        session,\r\n        this.auth.currentUser.userName\r\n      );\r\n    }\r\n    if (this.sortBy === 'votes') {\r\n      this.visibleSessions.sort(sortByVotesDesc);\r\n    }\r\n  }\r\n\r\n  userHasVoted(session: ISession) {\r\n    return this.voterService.userHasVoted(\r\n      session,\r\n      this.auth.currentUser.userName\r\n    );\r\n  }\r\n\r\n  filterSessions(filter) {\r\n    if (filter === 'all') {\r\n      this.visibleSessions = this.sessions.slice(0);\r\n    } else {\r\n      this.visibleSessions = this.sessions.filter(session => {\r\n        return session.level.toLocaleLowerCase() === filter;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst sortByNameAsc = (session1: ISession, session2: ISession) => {\r\n  if (session1.name > session2.name) {\r\n    return 1;\r\n  } else if (session1.name === session2.name) {\r\n    return 0;\r\n  } else {\r\n    return -1;\r\n  }\r\n};\r\n\r\nconst sortByVotesDesc = (session1: ISession, session2: ISession) => {\r\n  return session2.voters.length - session1.voters.length;\r\n};\r\n","module.exports = \".votingWidgetContainer {\\r\\n  padding-left: 24px;\\r\\n}\\r\\n\\r\\n.votingWidget {\\r\\n  height: 64px;\\r\\n  padding-top: 7px;\\r\\n  border-radius: 21px;\\r\\n}\\r\\n\\r\\n.votingButton {\\r\\n  margin-left: -7px;\\r\\n  margin-top: 1px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.votingButton i {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.badge-inverse {\\r\\n  background-color: #fff;\\r\\n  color: #4e5d6c;\\r\\n}\\r\\n\\r\\n.votingCount {\\r\\n  margin-left: -11px;\\r\\n  margin-top: 1px;\\r\\n  font-weight: bold;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXZlbnRzL2V2ZW50LWRldGFpbC91cHZvdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvZXZlbnRzL2V2ZW50LWRldGFpbC91cHZvdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi52b3RpbmdXaWRnZXRDb250YWluZXIge1xyXG4gIHBhZGRpbmctbGVmdDogMjRweDtcclxufVxyXG5cclxuLnZvdGluZ1dpZGdldCB7XHJcbiAgaGVpZ2h0OiA2NHB4O1xyXG4gIHBhZGRpbmctdG9wOiA3cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMjFweDtcclxufVxyXG5cclxuLnZvdGluZ0J1dHRvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IC03cHg7XHJcbiAgbWFyZ2luLXRvcDogMXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnZvdGluZ0J1dHRvbiBpIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5iYWRnZS1pbnZlcnNlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIGNvbG9yOiAjNGU1ZDZjO1xyXG59XHJcblxyXG4udm90aW5nQ291bnQge1xyXG4gIG1hcmdpbi1sZWZ0OiAtMTFweDtcclxuICBtYXJnaW4tdG9wOiAxcHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'upvote',\r\n  styleUrls: ['./upvote.component.css'],\r\n  template: `\r\n    <div class=\"votingWidgetContainer pointable\" (click)=\"onClick()\">\r\n      <div class=\"votingWidget well\">\r\n        <div class=\"votingButton\">\r\n          <i class=\"glyphicon glyphicon-heart\" [style.color]=\"iconColor\"></i>\r\n        </div>\r\n        <div class=\"badge badge-inverse votingCount\">\r\n          <div>{{ count }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class UpVoteComponent {\r\n  iconColor: string;\r\n  @Input() count: number;\r\n  @Input() set voted(val) {\r\n    this.iconColor = val ? 'red' : 'white';\r\n  }\r\n  @Output() vote = new EventEmitter();\r\n\r\n  onClick() {\r\n    this.vote.emit({});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ISession } from '../shared/event.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class VoterService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  deleteVoter(eventId: number, session: ISession, voterName: string) {\r\n    session.voters = session.voters.filter(voter => voter !== voterName);\r\n    const url = `/api/events/${eventId}/sessions/${\r\n      session.id\r\n    }/voters/${voterName}`;\r\n    this.http\r\n      .delete(url)\r\n      .pipe(catchError(this.handleError<ISession>('addVoter')))\r\n      .subscribe();\r\n  }\r\n\r\n  addVoter(eventId: number, session: ISession, voterName: string) {\r\n    session.voters.push(voterName);\r\n    const url = `/api/events/${eventId}/sessions/${\r\n      session.id\r\n    }/voters/${voterName}`;\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    this.http\r\n      .post(url, {}, options)\r\n      .pipe(catchError(this.handleError<ISession>('addVoter')))\r\n      .subscribe();\r\n  }\r\n\r\n  userHasVoted(session: ISession, voterName: string) {\r\n    return session.voters.some(voter => voter === voterName);\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error('error: ', error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Resolve, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { EventService } from \"./shared/event.service\";\r\n\r\n@Injectable()\r\nexport class EventResolver implements Resolve<any> {\r\n  constructor(private eventService: EventService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    return this.eventService.getEvent(route.params[\"id\"]);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { IEvent } from './shared/event-shared-barrel';\r\n\r\n@Component({\r\n  selector: 'event-thumbnail',\r\n  template: `\r\n    <div class=\"well hoverwell thumbnail\" [routerLink]=\"['/events', event.id]\">\r\n      <h2>{{ event?.name | uppercase }}</h2>\r\n      <div>Date: {{ event?.date | date: \"shortDate\" }}</div>\r\n      <div [ngSwitch]=\"event?.time\" [ngClass]=\"getStartTimeClass()\">\r\n        Time: {{ event?.time }}\r\n        <span *ngSwitchCase=\"'8:00 am'\">(Early Start)</span>\r\n        <span *ngSwitchCase=\"'10:00 am'\">(Late Start)</span>\r\n        <span *ngSwitchDefault>(Normal Start)</span>\r\n      </div>\r\n      <div>Price: {{ event?.price | currency: \"USD\" }}</div>\r\n      <div *ngIf=\"event?.location\">\r\n        <span>Location: {{ event?.location?.address }}</span>\r\n        <span>&nbsp;</span>\r\n        <span class=\"pad-left\"\r\n          >{{ event?.location?.city }}, {{ event?.location?.country }}</span\r\n        >\r\n      </div>\r\n      <div *ngIf=\"event?.onlineUrl\">Online Url: {{ event?.onlineUrl }}</div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .green {\r\n        color: #003300 !important;\r\n      }\r\n      .bold {\r\n        font-weight: bold;\r\n      }\r\n      .thumbnail {\r\n        min-height: 210px;\r\n      }\r\n      .pad-left {\r\n        margin-left: 10px;\r\n      }\r\n      .well div {\r\n        color: #bbb;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class EventThumbnailComponent {\r\n  @Input() event: IEvent;\r\n\r\n  getStartTimeClass() {\r\n    if (this.event && this.event.time === '8:00 am') {\r\n      return ['green', 'bold'];\r\n      return [];\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { EventService } from './shared/event.service';\r\n\r\n@Injectable()\r\nexport class EventsListResolver implements Resolve<any> {\r\n  constructor(private eventService: EventService) {}\r\n\r\n  resolve() {\r\n    return this.eventService.getEvents();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EventService } from './shared/event.service';\r\nimport { IEvent } from './shared/event-shared-barrel';\r\n\r\ndeclare let toastr;\r\n\r\n@Component({\r\n  template: `\r\n    <div>\r\n      <h1>Upcoming Angular Events</h1>\r\n      <hr />\r\n      <div class=\"row\">\r\n        <div class=\"col-md-5\" *ngFor=\"let event of events\">\r\n          <event-thumbnail [event]=\"event\"></event-thumbnail>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class EventsListComponent implements OnInit {\r\n  events: IEvent[];\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.events = this.route.snapshot.data.events;\r\n  }\r\n}\r\n","import { Directive } from \"@angular/core\";\r\nimport { Validator, FormGroup, NG_VALIDATORS } from \"@angular/forms\";\r\n@Directive({\r\n  selector: \"[validateLocation]\",\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: LocationValidator,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LocationValidator implements Validator {\r\n  validate(formGroup: FormGroup): { [key: string]: any } {\r\n    let addressControl = formGroup.controls[\"address\"];\r\n    let cityControl = formGroup.controls[\"city\"];\r\n    let countryControl = formGroup.controls[\"country\"];\r\n    let onlineUrlControl = (<FormGroup>formGroup.root).controls[\"onlineUrl\"];\r\n\r\n    if (\r\n      (addressControl &&\r\n        addressControl.value &&\r\n        cityControl &&\r\n        cityControl.value &&\r\n        countryControl &&\r\n        countryControl.value) ||\r\n      (onlineUrlControl && onlineUrlControl.value)\r\n    ) {\r\n      return null;\r\n    } else {\r\n      return { validateLocation: false };\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'duration'\r\n})\r\nexport class DurationPipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    switch (value) {\r\n      case 1:\r\n        return 'Half Hour';\r\n      case 2:\r\n        return 'One Hour';\r\n      case 3:\r\n        return 'Half Day';\r\n      case 4:\r\n        return 'Full Day';\r\n      default:\r\n        return value.toString();\r\n    }\r\n  }\r\n}\r\n","export * from './event.service';\r\nexport * from './event.model';\r\nexport * from './restricted-words-validator';\r\nexport * from './duration.pipe';\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IEvent, ISession } from './event.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error('error: ', error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  getEvents(): Observable<IEvent[]> {\r\n    return this.http\r\n      .get<IEvent[]>('/api/events')\r\n      .pipe(catchError(this.handleError<IEvent[]>('getEvents', [])));\r\n  }\r\n\r\n  getEvent(id: number): Observable<IEvent> {\r\n    return this.http\r\n      .get<IEvent>('/api/events/' + id)\r\n      .pipe(catchError(this.handleError<IEvent>('getEvent')));\r\n  }\r\n\r\n  saveEvent(event): Observable<IEvent> {\r\n    const options = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http\r\n      .post<IEvent>('/api/events', event, options)\r\n      .pipe(catchError(this.handleError<IEvent>('saveEvent')));\r\n  }\r\n\r\n  searchSessions(searchTerm: string): Observable<ISession[]> {\r\n    return this.http\r\n      .get<ISession[]>('/api/sessions/search?search=' + searchTerm)\r\n      .pipe(catchError(this.handleError<ISession[]>('searchSessions', [])));\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport function restrictedWords(words) {\r\n  return (control: FormControl): { [key: string]: any } => {\r\n    if (!words) { return null; }\r\n\r\n    let invalidWords = words\r\n      .map(w => (control.value.includes(w) ? w : null))\r\n      .filter(w => w != null);\r\n    return invalidWords && invalidWords.length > 0\r\n      ? { restrictedWords: invalidWords.join(', ') }\r\n      : null;\r\n  };\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthService } from \"../user/auth.service\";\r\nimport { EventService } from \"../events/event-barrel\";\r\nimport { ISession } from \"../events/event-barrel\";\r\n\r\n@Component({\r\n  selector: \"nav-bar\",\r\n  templateUrl: \"./navbar.component.html\",\r\n  styles: [\r\n    `\r\n      .nav.navbar-nav {\r\n        font-size: 15px;\r\n      }\r\n      #searchForm {\r\n        margin-right: 100px;\r\n      }\r\n      @media (max-width: 1200px) {\r\n        #searchForm {\r\n          display: none;\r\n        }\r\n      }\r\n      li > a.active {\r\n        color: #f97924;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NavBarComponent {\r\n  searchTerm: string = \"\";\r\n  foundSessions: ISession[];\r\n\r\n  constructor(public auth: AuthService, private eventService: EventService) {}\r\n\r\n  searchSessions(searchTerm) {\r\n    this.eventService.searchSessions(searchTerm).subscribe(sessions => {\r\n      this.foundSessions = sessions;\r\n    });\r\n  }\r\n}\r\n","import { Routes } from \"@angular/router\";\r\n// Barrel Imports\r\nimport {\r\n  EventsListResolver,\r\n  EventsListComponent,\r\n  CreateEventComponent,\r\n  EventDetailComponent,\r\n  CreateSessionComponent\r\n} from \"./events/event-barrel\";\r\nimport { Error404Component } from \"./errors/404.component\";\r\nimport { EventResolver } from \"./events/event-resolver.service\";\r\n\r\nexport const appRoutes: Routes = [\r\n  {\r\n    path: \"events/new\",\r\n    component: CreateEventComponent,\r\n    canDeactivate: [\"canDeactivateCreateEvent\"]\r\n  },\r\n  {\r\n    path: \"events\",\r\n    component: EventsListComponent,\r\n    resolve: { events: EventsListResolver }\r\n  },\r\n  {\r\n    path: \"events/:id\",\r\n    component: EventDetailComponent,\r\n    resolve: {event: EventResolver}\r\n  },\r\n  { path: \"events/session/new\", component: CreateSessionComponent },\r\n  { path: \"404\", component: Error404Component },\r\n  { path: \"\", redirectTo: \"/events\", pathMatch: \"full\" },\r\n  { path: \"user\", loadChildren: \"./user/user.module#UserModule\" }\r\n];\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { tap, catchError } from \"rxjs/operators\";\r\nimport { IUser } from \"./user.model\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  currentUser: IUser;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  loginUser(userName: string, password: string) {\r\n    const loginInfo = {\r\n      username: userName,\r\n      password\r\n    };\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    };\r\n    return this.http\r\n      .post(\"/api/login\", loginInfo, options)\r\n      .pipe(\r\n        tap(data => {\r\n          this.currentUser = data as IUser;\r\n        })\r\n      )\r\n      .pipe(\r\n        catchError(err => {\r\n          return of(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!this.currentUser;\r\n  }\r\n\r\n  checkAuthenticationStatus() {\r\n    this.http.get(\"/api/currentIdentity\").pipe(\r\n      tap(data => {\r\n        if (data instanceof Object) {\r\n          this.currentUser = data as IUser;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  updateCurrentUser(firstName: string, lastName: string) {\r\n    this.currentUser.firstName = firstName;\r\n    this.currentUser.lastName = lastName;\r\n\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    };\r\n\r\n    return this.http.put(\r\n      `/api/users/${this.currentUser.id}`,\r\n      this.currentUser,\r\n      options\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.currentUser = undefined;\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    };\r\n    return this.http.post(\"/api/logout\", {}, options);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}